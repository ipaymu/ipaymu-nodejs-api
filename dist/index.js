"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FAIL = exports.directPayment = exports.redirectPayment = exports.checkTransaction = exports.checkBalance = exports.historyTransaction = exports.addCart = exports.setComments = exports.setAmount = exports.setCOD = exports.setBuyer = exports.setURL = exports.setApiKey = exports.setVa = void 0;
const ipaymu_1 = require("./ipaymu");
const ipaymu = new ipaymu_1.default();
function setVa(va) {
    ipaymu.va = va;
}
exports.setVa = setVa;
function setApiKey(apiKey) {
    ipaymu.apiKey = apiKey;
}
exports.setApiKey = setApiKey;
function setURL(url) {
    ipaymu.url = url;
}
exports.setURL = setURL;
function setBuyer(buyer) {
    ipaymu.buyer = buyer;
}
exports.setBuyer = setBuyer;
function setCOD(cod) {
    ipaymu.cod = cod;
}
exports.setCOD = setCOD;
function setAmount(amount) {
    ipaymu.amount = amount;
}
exports.setAmount = setAmount;
function setComments(comments) {
    ipaymu.comments = comments;
}
exports.setComments = setComments;
function addCart(cart) {
    ipaymu.cart = cart;
}
exports.addCart = addCart;
function historyTransaction(data) {
    return ipaymu.historyTransaction(data);
}
exports.historyTransaction = historyTransaction;
function checkBalance() {
    return ipaymu.checkBalance();
}
exports.checkBalance = checkBalance;
function checkTransaction(id) {
    return ipaymu.checkTransaction(id);
}
exports.checkTransaction = checkTransaction;
function redirectPayment(paymentData) {
    return ipaymu.redirectPayment(paymentData);
}
exports.redirectPayment = redirectPayment;
function directPayment(data) {
    return ipaymu.directPayment(data);
}
exports.directPayment = directPayment;
function FAIL(msg) {
    throw new Error(msg);
}
exports.FAIL = FAIL;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEscUNBQTZEO0FBRTdELE1BQU0sTUFBTSxHQUFHLElBQUksZ0JBQU0sRUFBRSxDQUFDO0FBRTVCLFNBQVMsS0FBSyxDQUFDLEVBQVc7SUFDekIsTUFBTSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7QUFDaEIsQ0FBQztBQXNEUSxzQkFBSztBQXBEZCxTQUFTLFNBQVMsQ0FBQyxNQUFlO0lBQ2pDLE1BQU0sQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0FBQ3hCLENBQUM7QUFrRGUsOEJBQVM7QUFoRHpCLFNBQVMsTUFBTSxDQUFDLEdBQVM7SUFDeEIsTUFBTSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUM7QUFDbEIsQ0FBQztBQThDMEIsd0JBQU07QUE1Q2pDLFNBQVMsUUFBUSxDQUFDLEtBQWE7SUFDOUIsTUFBTSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7QUFDdEIsQ0FBQztBQTBDa0MsNEJBQVE7QUF4QzNDLFNBQVMsTUFBTSxDQUFDLEdBQVM7SUFDeEIsTUFBTSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUM7QUFDbEIsQ0FBQztBQXNDNEMsd0JBQU07QUFwQ25ELFNBQVMsU0FBUyxDQUFDLE1BQWM7SUFDaEMsTUFBTSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7QUFDeEIsQ0FBQztBQWtDb0QsOEJBQVM7QUFoQzlELFNBQVMsV0FBVyxDQUFDLFFBQWdCO0lBQ3BDLE1BQU0sQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDO0FBQzVCLENBQUM7QUE4QitELGtDQUFXO0FBNUIzRSxTQUFTLE9BQU8sQ0FBQyxJQUFXO0lBQ3hCLE1BQU0sQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFBO0FBQ3RCLENBQUM7QUEwQjRFLDBCQUFPO0FBeEJwRixTQUFTLGtCQUFrQixDQUFDLElBQVM7SUFDcEMsT0FBTyxNQUFNLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDeEMsQ0FBQztBQXNCcUYsZ0RBQWtCO0FBcEJ4RyxTQUFTLFlBQVk7SUFDcEIsT0FBTyxNQUFNLENBQUMsWUFBWSxFQUFFLENBQUM7QUFDOUIsQ0FBQztBQWtCeUcsb0NBQVk7QUFoQnRILFNBQVMsZ0JBQWdCLENBQUMsRUFBbUI7SUFDNUMsT0FBTyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDcEMsQ0FBQztBQWN1SCw0Q0FBZ0I7QUFaeEksU0FBUyxlQUFlLENBQUMsV0FBaUI7SUFDekMsT0FBTyxNQUFNLENBQUMsZUFBZSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQzVDLENBQUM7QUFVeUksMENBQWU7QUFSekosU0FBUyxhQUFhLENBQUMsSUFBVTtJQUNoQyxPQUFPLE1BQU0sQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDbkMsQ0FBQztBQU0wSixzQ0FBYTtBQUp4SyxTQUFTLElBQUksQ0FBQyxHQUFXO0lBQ3hCLE1BQU0sSUFBSSxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDdEIsQ0FBQztBQUV5SyxvQkFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBJcGF5bXUsIHsgVEJ1eWVyLCBUQ2FydCwgVENvZCwgVFVybCB9IGZyb20gXCIuL2lwYXltdVwiO1xuXG5jb25zdCBpcGF5bXUgPSBuZXcgSXBheW11KCk7XG5cbmZ1bmN0aW9uIHNldFZhKHZhPzogc3RyaW5nKSB7XG5cdGlwYXltdS52YSA9IHZhO1xufVxuXG5mdW5jdGlvbiBzZXRBcGlLZXkoYXBpS2V5Pzogc3RyaW5nKSB7XG5cdGlwYXltdS5hcGlLZXkgPSBhcGlLZXk7XG59XG5cbmZ1bmN0aW9uIHNldFVSTCh1cmw6IFRVcmwpIHtcblx0aXBheW11LnVybCA9IHVybDtcbn1cblxuZnVuY3Rpb24gc2V0QnV5ZXIoYnV5ZXI6IFRCdXllcikge1xuXHRpcGF5bXUuYnV5ZXIgPSBidXllcjtcbn1cblxuZnVuY3Rpb24gc2V0Q09EKGNvZDogVENvZCkge1xuXHRpcGF5bXUuY29kID0gY29kO1xufVxuXG5mdW5jdGlvbiBzZXRBbW91bnQoYW1vdW50OiBzdHJpbmcpIHtcblx0aXBheW11LmFtb3VudCA9IGFtb3VudDtcbn1cblxuZnVuY3Rpb24gc2V0Q29tbWVudHMoY29tbWVudHM6IHN0cmluZykge1xuXHRpcGF5bXUuY29tbWVudHMgPSBjb21tZW50cztcbn1cblxuZnVuY3Rpb24gYWRkQ2FydChjYXJ0OiBUQ2FydCkge1xuICAgIGlwYXltdS5jYXJ0ID0gY2FydFxufVxuXG5mdW5jdGlvbiBoaXN0b3J5VHJhbnNhY3Rpb24oZGF0YTogYW55KTogUHJvbWlzZTxhbnk+IHtcblx0cmV0dXJuIGlwYXltdS5oaXN0b3J5VHJhbnNhY3Rpb24oZGF0YSk7XG59XG5cbmZ1bmN0aW9uIGNoZWNrQmFsYW5jZSgpOiBQcm9taXNlPGFueT4ge1xuXHRyZXR1cm4gaXBheW11LmNoZWNrQmFsYW5jZSgpO1xufVxuXG5mdW5jdGlvbiBjaGVja1RyYW5zYWN0aW9uKGlkOiBzdHJpbmcgfCBudW1iZXIpOiBQcm9taXNlPGFueT4ge1xuXHRyZXR1cm4gaXBheW11LmNoZWNrVHJhbnNhY3Rpb24oaWQpO1xufVxuXG5mdW5jdGlvbiByZWRpcmVjdFBheW1lbnQocGF5bWVudERhdGE/OiBhbnkpIHtcblx0cmV0dXJuIGlwYXltdS5yZWRpcmVjdFBheW1lbnQocGF5bWVudERhdGEpO1xufVxuXG5mdW5jdGlvbiBkaXJlY3RQYXltZW50KGRhdGE/OiBhbnkpIHtcblx0cmV0dXJuIGlwYXltdS5kaXJlY3RQYXltZW50KGRhdGEpO1xufVxuXG5mdW5jdGlvbiBGQUlMKG1zZzogc3RyaW5nKSB7XG5cdHRocm93IG5ldyBFcnJvcihtc2cpO1xufVxuXG5leHBvcnQgeyBzZXRWYSwgc2V0QXBpS2V5LCBzZXRVUkwsIHNldEJ1eWVyLCBzZXRDT0QsIHNldEFtb3VudCwgc2V0Q29tbWVudHMsIGFkZENhcnQsIGhpc3RvcnlUcmFuc2FjdGlvbiwgY2hlY2tCYWxhbmNlLCBjaGVja1RyYW5zYWN0aW9uLCByZWRpcmVjdFBheW1lbnQsIGRpcmVjdFBheW1lbnQsIEZBSUwgfTtcbiJdfQ==